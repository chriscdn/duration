{"version":3,"file":"duration.modern.js","sources":["../src/index.ts"],"sourcesContent":["type TDurationConstructor = {\n  days?: number;\n  hours?: number;\n  minutes?: number;\n  seconds?: number;\n  milliseconds?: number;\n  microseconds?: number;\n};\n\nexport const MicrosecondsPerMillisecond = 1e3;\nexport const MicrosecondsPerSecond = 1e6;\nexport const MicrosecondsPerMinute = 6e7;\nexport const MicrosecondsPerHour = 3.6e9;\nexport const MicrosecondsPerDay = 8.64e10;\n\nexport class Duration {\n  private _microseconds = 0;\n\n  constructor(options: TDurationConstructor) {\n    this._microseconds =\n      (options.days ?? 0) * MicrosecondsPerDay +\n      (options.hours ?? 0) * MicrosecondsPerHour +\n      (options.minutes ?? 0) * MicrosecondsPerMinute +\n      (options.seconds ?? 0) * MicrosecondsPerSecond +\n      (options.milliseconds ?? 0) * MicrosecondsPerMillisecond +\n      (options.microseconds ?? 0);\n  }\n\n  static with(options: TDurationConstructor) {\n    return new Duration(options);\n  }\n\n  static toMilliseconds(options: TDurationConstructor) {\n    return new Duration(options).milliseconds;\n  }\n\n  get days() {\n    return this._microseconds / MicrosecondsPerDay;\n  }\n\n  get hours() {\n    return this._microseconds / MicrosecondsPerHour;\n  }\n\n  get minutes() {\n    return this._microseconds / MicrosecondsPerMinute;\n  }\n\n  get seconds() {\n    return this._microseconds / MicrosecondsPerSecond;\n  }\n\n  get milliseconds() {\n    return this._microseconds / MicrosecondsPerMillisecond;\n  }\n\n  get microseconds() {\n    return this._microseconds;\n  }\n\n  abs() {\n    return new Duration({ microseconds: Math.abs(this.microseconds) });\n  }\n}\n"],"names":["MicrosecondsPerMillisecond","MicrosecondsPerSecond","MicrosecondsPerMinute","MicrosecondsPerHour","MicrosecondsPerDay","Duration","constructor","options","_options$days","_options$hours","_options$minutes","_options$seconds","_options$milliseconds","_options$microseconds","_microseconds","this","days","hours","minutes","seconds","milliseconds","microseconds","with","toMilliseconds","abs","Math"],"mappings":"AASa,MAAAA,EAA6B,IAC7BC,EAAwB,IACxBC,EAAwB,IACxBC,EAAsB,KACtBC,EAAqB,YAErBC,EAGXC,WAAAA,CAAYC,GAA6B,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAFjCC,KAAAA,cAAgB,EAGtBC,KAAKD,eACUN,OAAbA,EAACD,EAAQS,MAAIR,EAAI,GAAKJ,GACRK,OAAdA,EAACF,EAAQU,OAAKR,EAAI,GAAKN,GACP,OAAhBO,EAACH,EAAQW,SAAOR,EAAI,GAAKR,GACT,OAAhBS,EAACJ,EAAQY,SAAOR,EAAI,GAAKV,GACJ,OAArBW,EAACL,EAAQa,cAAYR,EAAI,GAAKZ,GACT,OADmCa,EACvDN,EAAQc,cAAYR,EAAI,EAC7B,CAEA,WAAOS,CAAKf,GACV,OAAO,IAAIF,EAASE,EACtB,CAEA,qBAAOgB,CAAehB,GACpB,OAAO,IAAIF,EAASE,GAASa,YAC/B,CAEA,QAAIJ,GACF,OAAWD,KAACD,cAAgBV,CAC9B,CAEA,SAAIa,GACF,OAAWF,KAACD,cAAgBX,CAC9B,CAEA,WAAIe,GACF,OAAWH,KAACD,cAAgBZ,CAC9B,CAEA,WAAIiB,GACF,OAAWJ,KAACD,cAAgBb,CAC9B,CAEA,gBAAImB,GACF,OAAOL,KAAKD,cAAgBd,CAC9B,CAEA,gBAAIqB,GACF,OAAON,KAAKD,aACd,CAEAU,GAAAA,GACE,OAAO,IAAInB,EAAS,CAAEgB,aAAcI,KAAKD,IAAIT,KAAKM,eACpD"}