{"version":3,"file":"duration.cjs","sources":["../src/index.ts"],"sourcesContent":["type TDurationConstructor = {\n  days?: number;\n  hours?: number;\n  minutes?: number;\n  seconds?: number;\n  milliseconds?: number;\n  microseconds?: number;\n};\n\nexport const MicrosecondsPerMillisecond = 1e3;\nexport const MicrosecondsPerSecond = 1e6;\nexport const MicrosecondsPerMinute = 6e7;\nexport const MicrosecondsPerHour = 3.6e9;\nexport const MicrosecondsPerDay = 8.64e10;\n\nexport class Duration {\n  private _microseconds = 0;\n\n  constructor(options: TDurationConstructor) {\n    this._microseconds =\n      (options.days ?? 0) * MicrosecondsPerDay +\n      (options.hours ?? 0) * MicrosecondsPerHour +\n      (options.minutes ?? 0) * MicrosecondsPerMinute +\n      (options.seconds ?? 0) * MicrosecondsPerSecond +\n      (options.milliseconds ?? 0) * MicrosecondsPerMillisecond +\n      (options.microseconds ?? 0);\n  }\n\n  static with(options: TDurationConstructor) {\n    return new Duration(options);\n  }\n\n  static toMilliseconds(options: TDurationConstructor) {\n    return new Duration(options).milliseconds;\n  }\n\n  get days() {\n    return this._microseconds / MicrosecondsPerDay;\n  }\n\n  get hours() {\n    return this._microseconds / MicrosecondsPerHour;\n  }\n\n  get minutes() {\n    return this._microseconds / MicrosecondsPerMinute;\n  }\n\n  get seconds() {\n    return this._microseconds / MicrosecondsPerSecond;\n  }\n\n  get milliseconds() {\n    return this._microseconds / MicrosecondsPerMillisecond;\n  }\n\n  get microseconds() {\n    return this._microseconds;\n  }\n}\n"],"names":["MicrosecondsPerMillisecond","MicrosecondsPerSecond","MicrosecondsPerMinute","MicrosecondsPerHour","MicrosecondsPerDay","Duration","options","_options$days","_options$hours","_options$minutes","_options$seconds","_options$milliseconds","_options$microseconds","this","_microseconds","days","hours","minutes","seconds","milliseconds","microseconds","toMilliseconds","key","get"],"mappings":"iSASa,IAAAA,EAA6B,IAC7BC,EAAwB,IACxBC,EAAwB,IACxBC,EAAsB,KACtBC,EAAqB,oCAEb,WAGnB,SAAAC,EAAYC,GAA6BC,IAAAA,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,KAFjCC,cAAgB,EAGtBD,KAAKC,eACU,OAAbP,EAACD,EAAQS,MAAIR,EAAI,GAAKH,GACR,OAAdI,EAACF,EAAQU,OAAKR,EAAI,GAAKL,GACPM,OAAhBA,EAACH,EAAQW,SAAOR,EAAI,GAAKP,GACTQ,OAAhBA,EAACJ,EAAQY,SAAOR,EAAI,GAAKT,GACJU,OAArBA,EAACL,EAAQa,cAAYR,EAAI,GAAKX,GACTY,OADmCA,EACvDN,EAAQc,cAAYR,EAAI,EAC7B,CAQC,OARAP,EAAA,KAED,SAAYC,GACV,OAAW,IAAAD,EAASC,EACtB,EAACD,EAEMgB,eAAP,SAAsBf,GACpB,OAAO,IAAID,EAASC,GAASa,YAC/B,IAACd,KAAA,CAAA,CAAAiB,IAAA,OAAAC,IAED,WACE,OAAWV,KAACC,cAAgBV,CAC9B,GAAC,CAAAkB,IAAA,QAAAC,IAED,WACE,OAAWV,KAACC,cAAgBX,CAC9B,GAACmB,CAAAA,IAAAC,UAAAA,IAED,WACE,OAAOV,KAAKC,cAAgBZ,CAC9B,GAAC,CAAAoB,IAAA,UAAAC,IAED,WACE,OAAWV,KAACC,cAAgBb,CAC9B,GAACqB,CAAAA,IAAAC,eAAAA,IAED,WACE,YAAYT,cAAgBd,CAC9B,GAAC,CAAAsB,IAAA,eAAAC,IAED,WACE,OAAWV,KAACC,aACd,yPAAC,CA3CkB"}