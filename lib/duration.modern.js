const s=1e6,t=6e7,e=36e8,r=864e8,i=6048e8;class n{constructor(n){var o,c,u,d,m,l,a;this._microseconds=0,this._microseconds=(null!=(o=n.weeks)?o:0)*i+(null!=(c=n.days)?c:0)*r+(null!=(u=n.hours)?u:0)*e+(null!=(d=n.minutes)?d:0)*t+(null!=(m=n.seconds)?m:0)*s+1e3*(null!=(l=n.milliseconds)?l:0)+(null!=(a=n.microseconds)?a:0)}static with(s){return new n(s)}static toWeeks(s){return n.with(s).weeks}static toDays(s){return n.with(s).days}static toHours(s){return n.with(s).hours}static toMinutes(s){return n.with(s).minutes}static toSeconds(s){return n.with(s).seconds}static toMilliseconds(s){return n.with(s).milliseconds}static toMicroseconds(s){return n.with(s).microseconds}static difference(s,t){return n.with({milliseconds:t.getTime()-s.getTime()})}get weeks(){return this._microseconds/i}get days(){return this._microseconds/r}get hours(){return this._microseconds/e}get minutes(){return this._microseconds/t}get seconds(){return this._microseconds/s}get milliseconds(){return this._microseconds/1e3}get microseconds(){return this._microseconds}addTo(s){return new Date(s.getTime()+this.milliseconds)}subtractFrom(s){return new Date(s.getTime()-this.milliseconds)}fromNow(){return this.addTo(new Date)}ago(){return this.subtractFrom(new Date)}get abs(){return new n({microseconds:Math.abs(this.microseconds)})}}export{n as Duration};
//# sourceMappingURL=duration.modern.js.map
